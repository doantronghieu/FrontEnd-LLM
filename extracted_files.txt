./app.vue:
```
<template>
  <div>

    <!-- <UContainer>
      <NuxtPage />
    </UContainer> -->

    <NuxtRouteAnnouncer />
    <!-- <NuxtWelcome /> -->

    

    <BackgroundComponent />
    <ChatbotSmall />
    <UNotifications />

    <NuxtLayout>                                                                                                                
      <NuxtPage />                                                                                                              
    </NuxtLayout>  
  </div>
</template>

<script setup>
import ChatbotSmall  from '~/components/ChatbotWidget/ChatbotSmall.vue';
import BackgroundComponent from '~/components/ui/BackgroundComponent.vue';

</script>

```
./components/ui/BackgroundComponent.vue:
```
<template>
  <div class="background">
    <!-- Background content goes here -->
  </div>
</template>

<script>
export default {
  name: 'BackgroundComponent',
};
</script>

<style scoped>
.background {
  background: linear-gradient(135deg, #ADD8E6 0%, #FFB6C1 100%);
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -100;
}
</style>

```
./layouts/default.vue:
```
<template>                                                                                                                      
  <div class="default-layout">                                                                                                  
    <UVerticalNavigation :links="links" class="sidebar" />                                                                      
    <main class="content">                                                                                                      
      <NuxtPage />                                                                                                              
    </main>                                                                                                                     
  </div>                                                                                                                        
</template>                                                                                                                     
                                                                                                                                
<script setup>                                                                                                                  
const links = [                                                                                                                 
  {                                                                                                                             
    label: 'Home',                                                                                                              
    icon: 'i-heroicons-home',                                                                                                   
    to: '/'                                                                                                                     
  },                                                                                                                            
  {                                                                                                                             
    label: 'Personnel',                                                                                                         
    icon: 'heroicons:user-group-16-solid',                                                                                                   
    to: '/tdtu/feee/personnel'                                                                                                  
  },                                                                                                                            
  {                                                                                                                             
    label: 'Programms',                                                                                                         
    icon: 'heroicons:academic-cap-16-solid',                                                                                                   
    to: '/tdtu/feee/programs'                                                                                                   
  }                                                                                                                             
]                                                                                                                               
</script>                                                                                                                       
                                                                                                                                
<style scoped>                                                                                                                  
.default-layout {                                                                                                               
  display: flex;                                                                                                                
  flex-direction: row;                                                                                                          
  min-height: 100vh;                                                                                                            
}                                                                                                                               
                                                                                                                                
.sidebar {                                                                                                                      
  width: 140px; /* Adjust the width as needed */                                                                                
  overflow-y: auto;                                                                                                             
}                                                                                                                               
                                                                                                                                
.content {                                                                                                                      
  flex: 1;                                                                                                                      
  padding: 20px;                                                                                                                
}                                                                                                                               
</style>      
```
./store/personnelStore.js:
```
import { defineStore } from 'pinia';                                                                                            
 import personnelData from '~/data/tdtu/feee/personnel.json';                                                                    
  
 export const usePersonnelStore = defineStore('personnel', {                                                                     
   state: () => ({                                                                                                               
     personnelList: [],                                                                                                          
   }),                                                                                                                           
   actions: {                                                                                                                    
     fetchPersonnelData() {                                                                                                      
       if (Array.isArray(personnelData)) {                                                                                       
         this.personnelList = personnelData.map(personnel => ({                                                                  
           faculty: personnel.Faculty,                                                                                           
           name: personnel.Name,                                                                                                 
           position: personnel.Position,                                                                                         
           major: personnel.Major,                                                                                               
           email: personnel.Email,                                                                                               
           office: personnel.Office,                                                                                             
           department: personnel.Department,                                                                                     
         }));                                                                                                                    
       } else {                                                                                                                  
         console.error('Invalid data format for personnel data:', personnelData);                                                
         this.personnelList = [];                                                                                                
       }                                                                                                                         
     },                                                                                                                          
   },                                                                                                                            
 });   
```
./store/programStore.js:
```
import { defineStore } from 'pinia';                                                                                            
 import programData from '~/data/tdtu/feee/programs.json';                                                                       
  
 export const useProgramStore = defineStore('program', {                                                                         
   state: () => ({                                                                                                               
     programList: [],                                                                                                            
     selectedProgram: null,                                                                                                      
   }),                                                                                                                           
   actions: {                                                                                                                    
     fetchProgramData() {                                                                                                        
       if (Array.isArray(programData)) {                                                                                         
         this.programList = programData.map(program => ({                                                                        
           faculty: program.Faculty,                                                                                             
           studyField: program.StudyField,                                                                                       
           link: program.Link,                                                                                                   
           programType: program.ProgramType,                                                                                     
           educationLevel: program.EducationLevel,                                                                               
           introduction: program.Introduction,                                                                                   
           careerProspects: program.CareerProspects,                                                                             
           outcome: program.Outcome,                                                                                             
           syllabub: program.Syllabub,                                                                                           
           admissionCandidates: program.AdmissionCandidates,                                                                     
           registration: program.Registration,                                                                                   
           tuition: program.Tuition,                                                                                             
           contact: program.Contact,                                                                                             
         }));                                                                                                                    
       } else {                                                                                                                  
         console.error('Invalid data format for program data:', programData);                                                    
         this.programList = [];                                                                                                  
       }                                                                                                                         
     },                                                                                                                          
     setSelectedProgram(program) {                                                                                               
       this.selectedProgram = program;                                                                                           
     },                                                                                                                          
   },                                                                                                                            
 });                                 
```
./components/TDTU/BaseCardPersonnel.vue:
```
<template>                                                                                                                      
  <UCard class="base-card-personnel">                                                                                           
    <div class="flex flex-col space-y-2">                                                                                       
      <h2 class="text-xl font-bold">{{ name }}</h2>                                                                             
      <p><strong>Position:</strong> {{ position }}</p>                                                                          
      <p><strong>Major:</strong> {{ major }}</p>                                                                                
      <p><strong>Faculty:</strong> {{ faculty }}</p>                                                                            
      <p><strong>Department:</strong> {{ department }}</p>                                                                      
      <p><strong>Email:</strong> <a :href="`mailto:${email}`">{{ email }}</a></p>                                               
      <p><strong>Office:</strong> {{ office }}</p>                                                                              
    </div>                                                                                                                      
  </UCard>                                                                                                                      
</template>                                                                                                                     
 
<script setup>                                                                                                                  
defineProps({                                                                                                                   
  faculty: { type: String, required: true },                                                                                    
  name: { type: String, required: true },                                                                                       
  position: { type: String, required: true },                                                                                   
  major: { type: String, required: true },                                                                                      
  email: { type: String, required: true },                                                                                      
  office: { type: String, required: true },                                                                                     
  department: { type: String, required: true },                                                                                 
});                                                                                                                             
</script>                                                                                                                       
 
<style scoped>                                                                                                                  
.base-card-personnel {                                                                                                          
  max-width: 400px;                                                                                                             
  margin: 1rem;                                                                                                                 
}                                                                                                                               
</style>                  
```
./components/TDTU/BaseCardProgramDetail.vue:
```
<template>
  <UCard>
    <div class="base-card-program-detail rounded-lg shadow-lg">
      <button @click="$emit('close')" class="close-button focus:outline-none focus:ring focus:border-blue-300">
        Close
      </button>
      <h2 class="text-2xl font-bold mb-4">{{ studyField }}</h2>
      <div v-html="renderedContent"></div>
    </div>
  </UCard>
</template>

<script setup>
import { marked } from 'marked';
import { computed } from 'vue';

marked.use({ breaks: true, gfm: true })

const props = defineProps({
  faculty: { type: String, required: true },
  studyField: { type: String, required: true },
  link: { type: String, required: true },
  programType: { type: String, required: true },
  educationLevel: { type: String, required: true },
  introduction: { type: String, required: true },
  careerProspects: { type: String, required: true },
  outcome: { type: String, required: true },
  syllabub: { type: String, required: true },
  admissionCandidates: { type: String, required: true },
  registration: { type: String, required: true },
  tuition: { type: String, required: true },
  contact: { type: String, required: true },
});

defineEmits(['close']);

const renderedContent = computed(() => {
  const content = `
<span style="color:cyan">**Faculty**</span>: ${props.faculty} 
<br>
<span style="color:cyan">**Program Type**</span>: ${props.programType}
<br>
<span style="color:cyan">**Education Level:**</span> ${props.educationLevel}
<br>
<span style="color:cyan">**Introduction:**</span>
${props.introduction}
<br>
<br>

<span style="color:cyan">**Career Prospects:**</span>
${props.careerProspects}
<br>
<br>

<span style="color:cyan">**Outcome:**</span>
${props.outcome}
<br>
<span style="color:cyan">**Syllabub:**</span>
${props.syllabub}
<br>
<span style="color:cyan">**Admission Candidates:**</span>
${props.admissionCandidates}
<br>
<span style="color:cyan">**Registration:**</span>
${props.registration}
<br>
<span style="color:cyan">**Tuition:**</span>
${props.tuition}
<br>
<span style="color:cyan">**Contact:**</span>
${props.contact}
  `;
  return marked.parse(content);
});
</script>

<style scoped>
.base-card-program-detail {
  overflow-y: auto;
  height: 85vh;
  margin: 1rem;
  position: relative;
  

}

.close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 5px 10px;
  border-radius: 4px;
  cursor: pointer;
}
</style>
```
./components/TDTU/BaseCardProgramIntro.vue:
```
<template>                                                                                                                      
  <UCard class="base-card-program-intro" @click="handleClick">                                                                  
    <div class="flex flex-col space-y-2">                                                                                       
      <h2 class="text-xl font-bold">{{ studyField }}</h2>                                                                       
      <p><strong>Faculty:</strong> {{ faculty }}</p>                                                                            
      <p><strong>Program Type:</strong> {{ programType }}</p>                                                                   
      <p><strong>Education Level:</strong> {{ educationLevel }}</p>                                                             
    </div>                                                                                                                      
  </UCard>                                                                                                                      
</template>                                                                                                                     
                                                                                                                                
<script setup>                                                                                                                  
defineProps({                                                                                                                   
  faculty: { type: String, required: true },                                                                                    
  studyField: { type: String, required: true },                                                                                 
  link: { type: String, required: true },                                                                                       
  programType: { type: String, required: true },                                                                                
  educationLevel: { type: String, required: true },                                                                             
});                                                                                                                             
                                                                                                                                
const emit = defineEmits(['click']);                                                                                            
                                                                                                                                
const handleClick = () => {                                                                                                     
  emit('click');                                                                                                                
};                                                                                                                              
</script>                                                                                                                       
                                                                                                                                
<style scoped>                                                                                                                  
.base-card-program-intro {                                                                                                      
  max-width: 400px;                                                                                                             
  margin: 1rem;                                                                                                                 
  cursor: pointer;                                                                                                              
  transition: transform 0.2s;                                                                                                   
}                                                                                                                               
                                                                                                                                
.base-card-program-intro:hover {                                                                                                
  transform: scale(1.05);                                                                                                       
}                                                                                                                               
</style>          
```
./pages/tdtu/feee/personnel.vue:
```
<template>                                                                                                                      
  <div>                                                                                                                         
    <h1 class="text-3xl font-bold mb-4">Personnel</h1>                                                                          
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">                                                          
      <BaseCardPersonnel                                                                                                        
        v-for="personnel in personnelList"                                                                                      
        :key="personnel.email"                                                                                                  
        :faculty="personnel.faculty"                                                                                            
        :name="personnel.name"                                                                                                  
        :position="personnel.position"                                                                                          
        :major="personnel.major"                                                                                                
        :email="personnel.email"                                                                                                
        :office="personnel.office"                                                                                              
        :department="personnel.department"                                                                                      
      />                                                                                                                        
    </div>                                                                                                                      
  </div>                                                                                                                        
</template>                                                                                                                     

<script setup>
import { usePersonnelStore } from '~/store/personnelStore';
import { storeToRefs } from 'pinia';
import BaseCardPersonnel from '~/components/TDTU/BaseCardPersonnel.vue';

definePageMeta({
  fetchKey: 'personnel'
});

const personnelStore = usePersonnelStore();
const { personnelList } = storeToRefs(personnelStore);

await useFetch(() => personnelStore.fetchPersonnelData());
</script>


```
./pages/tdtu/feee/programs.vue:
```
<template>
  <div>
    <h1 class="text-3xl font-bold mb-4">Programs</h1>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      <BaseCardProgramIntro
        v-for="program in programList"
        :key="program.link"
        :faculty="program.faculty"
        :studyField="program.studyField"
        :link="program.link"
        :programType="program.programType"
        :educationLevel="program.educationLevel"
        @click="openModal(program)"
      />
    </div>
    <UModal v-model="isModalOpen" fullscreen>
      <div v-if="selectedProgram" class="modal-content">
        <BaseCardProgramDetail
          :faculty="selectedProgram.faculty"
          :studyField="selectedProgram.studyField"
          :link="selectedProgram.link"
          :programType="selectedProgram.programType"
          :educationLevel="selectedProgram.educationLevel"
          :introduction="selectedProgram.introduction"
          :careerProspects="selectedProgram.careerProspects"
          :outcome="selectedProgram.outcome"
          :syllabub="selectedProgram.syllabub"
          :admissionCandidates="selectedProgram.admissionCandidates"
          :registration="selectedProgram.registration"
          :tuition="selectedProgram.tuition"
          :contact="selectedProgram.contact"
          @close="closeModal"
        />
      </div>
    </UModal>
  </div>
</template>

<script setup>
import { useProgramStore } from '~/store/programStore';
import { ref } from 'vue';
import { storeToRefs } from 'pinia';
import BaseCardProgramIntro from '~/components/TDTU/BaseCardProgramIntro.vue';
import BaseCardProgramDetail from '~/components/TDTU/BaseCardProgramDetail.vue';

definePageMeta({
  fetchKey: 'programs'
});

const programStore = useProgramStore();
const { programList } = storeToRefs(programStore);
const selectedProgram = ref(null);
const isModalOpen = ref(false);

await useFetch(() => programStore.fetchProgramData());


const openModal = (program) => {
  selectedProgram.value = program;
  isModalOpen.value = true;
  // console.log('Selected program:', selectedProgram.value); // Debug log
};

const closeModal = () => {
  isModalOpen.value = false;
  selectedProgram.value = null;
};

</script>

<style scoped>
.modal-content {
  width: 100%;
  margin: 0 auto;
}
</style>
```
./store/messages.ts:
```
import { defineStore } from 'pinia'

export const useMessagesStore = defineStore('messages', {
  state: () => ({
    messages: [] as { sender: string, content: string }[],
  }),
  actions: {
    addMessage(sender: string, content: string) {
      this.messages.push({ sender, content })
    },
    addChunk(sender: string, chunk: string) {
      const lastMessage = this.messages[this.messages.length - 1];
      if (lastMessage && lastMessage.sender === sender) {
        lastMessage.content += chunk;
      } else {
        this.messages.push({ sender, content: chunk });
      }
    },
  },
})

```
./store/providers.ts:
```
import { defineStore } from 'pinia';

export const useProvidersStore = defineStore('providers', {
  state: () => ({
    currentProvider: 'random' as 'random' | 'chatgpt' | 'custom',
  }),
  actions: {
    setProvider(provider: 'random' | 'chatgpt' | 'custom') {
      this.currentProvider = provider;
    },
  },
});

```
./server.js:
```
const express = require('express');                                                                                             
const fs = require('fs');                                                                                                       
const path = require('path');                                                                                                   
 
const app = express();                                                                                                          
const port = 3000;                                                                                                              
 
app.get('/api/personnel', (req, res) => {                                                                                       
  const filePath = path.join(__dirname, 'data', 'tdtu', 'feee', 'personnel.json');                                              
  fs.readFile(filePath, 'utf8', (err, data) => {                                                                                
    if (err) {                                                                                                                  
      res.status(500).send('Error reading file');                                                                               
    } else {                                                                                                                    
      res.json(JSON.parse(data));                                                                                               
    }                                                                                                                           
  });                                                                                                                           
});                                                                                                                             
 
app.get('/api/programs', (req, res) => {                                                                                        
  const filePath = path.join(__dirname, 'data', 'tdtu', 'feee', 'programs.json');                                               
  fs.readFile(filePath, 'utf8', (err, data) => {                                                                                
    if (err) {                                                                                                                  
      res.status(500).send('Error reading file');                                                                               
    } else {                                                                                                                    
      res.json(JSON.parse(data));                                                                                               
    }                                                                                                                           
  });                                                                                                                           
});                                                                                                                             
 
app.listen(port, () => {                                                                                                        
  console.log(`Server is running on port ${port}`);                                                                             
}); 
```
